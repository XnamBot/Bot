"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createPartitionedMessageRow = exports.isMessageButtonComponent = exports.isMessageButtonInteraction = void 0;
const utilities_1 = require("@sapphire/utilities");
const discord_js_1 = require("discord.js");
function isMessageButtonInteraction(interaction) {
    return interaction.type === discord_js_1.Constants.MessageComponentTypes.BUTTON;
}
exports.isMessageButtonInteraction = isMessageButtonInteraction;
function isMessageButtonComponent(component) {
    return component.type === 'BUTTON';
}
exports.isMessageButtonComponent = isMessageButtonComponent;
function createPartitionedMessageRow(components) {
    // Partition the components into two groups: buttons and select menus
    const [messageButtons, selectMenus] = (0, utilities_1.partition)(components, isMessageButtonComponent);
    // Chunk the button components in sets of 5, the maximum of 1 MessageActionRow
    const chunkedButtonComponents = (0, utilities_1.chunk)(messageButtons, 5);
    // Map all the button components to MessageActionRows
    const messageButtonActionRows = chunkedButtonComponents.map((componentsChunk) => new discord_js_1.MessageActionRow() //
        .setComponents(componentsChunk));
    // Map all the select menu components to MessageActionRows
    const selectMenuActionRows = selectMenus.map((component) => new discord_js_1.MessageActionRow() //
        .setComponents(component));
    return [...messageButtonActionRows, ...selectMenuActionRows];
}
exports.createPartitionedMessageRow = createPartitionedMessageRow;
//# sourceMappingURL=utils.js.map