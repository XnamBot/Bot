"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNsfwChannel = exports.isTextBasedChannel = exports.isPrivateThreadChannel = exports.isPublicThreadChannel = exports.isNewsThreadChannel = exports.isThreadChannel = exports.isStageChannel = exports.isVoiceChannel = exports.isTextChannel = exports.isStoreChannel = exports.isNewsChannel = exports.isGuildBasedChannelByGuildKey = exports.isGuildBasedChannel = exports.isGroupChannel = exports.isDMChannel = exports.isCategoryChannel = void 0;
const utilities_1 = require("@sapphire/utilities");
/**
 * Checks whether a given channel is a {@link CategoryChannel}
 * @param channel The channel to check
 */
function isCategoryChannel(channel) {
    return channel?.type === 'GUILD_CATEGORY';
}
exports.isCategoryChannel = isCategoryChannel;
/**
 * Checks whether a given channel is a {@link DMChannel}
 * @param channel The channel to check
 */
function isDMChannel(channel) {
    return channel?.type === 'DM';
}
exports.isDMChannel = isDMChannel;
/**
 * Checks whether a given channel is a {@link PartialGroupDMChannel}
 * @param channel The channel to check
 */
function isGroupChannel(channel) {
    return channel?.type === 'GROUP_DM';
}
exports.isGroupChannel = isGroupChannel;
/**
 * Checks if a channel comes from a guild.
 * @param channel The channel to check
 * @returns Whether or not the channel is guild-based.
 */
function isGuildBasedChannel(channel) {
    return channel?.type !== 'DM';
}
exports.isGuildBasedChannel = isGuildBasedChannel;
/**
 * Checks whether or not a channel comes from a guild.
 * @remark As opposed to {@link isGuildBasedChannel} this checks if there is `guild` property on the channel.
 * @param channel The channel to check.
 * @returns Whether or not the channel is guild-based.
 */
function isGuildBasedChannelByGuildKey(channel) {
    return Reflect.has(channel ?? {}, 'guild');
}
exports.isGuildBasedChannelByGuildKey = isGuildBasedChannelByGuildKey;
/**
 * Checks whether a given channel is a {@link NewsChannel}.
 * @param channel The channel to check.
 */
function isNewsChannel(channel) {
    return channel?.type === 'GUILD_NEWS';
}
exports.isNewsChannel = isNewsChannel;
/**
 * Checks whether a given channel is a {@link StoreChannel}
 * @param channel The channel to check
 */
function isStoreChannel(channel) {
    return channel?.type === 'GUILD_STORE';
}
exports.isStoreChannel = isStoreChannel;
/**
 * Checks whether a given channel is a {@link TextChannel}.
 * @param channel The channel to check.
 */
function isTextChannel(channel) {
    return channel?.type === 'GUILD_TEXT';
}
exports.isTextChannel = isTextChannel;
/**
 * Checks whether a given channel is a {@link VoiceChannel}
 * @param channel The channel to check
 */
function isVoiceChannel(channel) {
    return channel?.type === 'GUILD_VOICE';
}
exports.isVoiceChannel = isVoiceChannel;
/**
 * Checks whether a given channel is a {@link StageChannel}
 * @param channel The channel to check
 */
function isStageChannel(channel) {
    return channel?.type === 'GUILD_STAGE_VOICE';
}
exports.isStageChannel = isStageChannel;
/**
 * Checks whether a given channel is a {@link ThreadChannel}
 * @param channel The channel to check.
 */
function isThreadChannel(channel) {
    return channel?.isThread() ?? false;
}
exports.isThreadChannel = isThreadChannel;
/**
 * Checks whether a given channel is a News {@link ThreadChannel}
 * @param channel The channel to check.
 */
function isNewsThreadChannel(channel) {
    return channel?.type === 'GUILD_NEWS_THREAD';
}
exports.isNewsThreadChannel = isNewsThreadChannel;
/**
 * Checks whether a given channel is a Public {@link ThreadChannel}
 * @param channel The channel to check.
 */
function isPublicThreadChannel(channel) {
    return channel?.type === 'GUILD_PUBLIC_THREAD';
}
exports.isPublicThreadChannel = isPublicThreadChannel;
/**
 * Checks whether a given channel is a Private {@link ThreadChannel}
 * @param channel The channel to check.
 */
function isPrivateThreadChannel(channel) {
    return channel?.type === 'GUILD_PRIVATE_THREAD';
}
exports.isPrivateThreadChannel = isPrivateThreadChannel;
/**
 * Checks whether a given channel is a {@link TextBasedChannelTypes}. This means it has a `send` method.
 * @param channel The channel to check.
 */
function isTextBasedChannel(channel) {
    if ((0, utilities_1.isNullish)(channel))
        return false;
    return !(0, utilities_1.isNullish)(channel.send);
}
exports.isTextBasedChannel = isTextBasedChannel;
/**
 * Checks whether a given channel allows NSFW content or not
 * @param channel The channel to check.
 */
function isNsfwChannel(channel) {
    if ((0, utilities_1.isNullish)(channel))
        return false;
    switch (channel.type) {
        case 'DM':
        case 'GROUP_DM':
        case 'GUILD_CATEGORY':
        case 'GUILD_STAGE_VOICE':
        case 'GUILD_STORE':
        case 'GUILD_VOICE':
        case 'UNKNOWN':
            return false;
        case 'GUILD_NEWS':
        case 'GUILD_TEXT':
            return channel.nsfw;
        case 'GUILD_NEWS_THREAD':
        case 'GUILD_PRIVATE_THREAD':
        case 'GUILD_PUBLIC_THREAD':
            return Boolean(channel.parent?.nsfw);
    }
}
exports.isNsfwChannel = isNsfwChannel;
//# sourceMappingURL=type-guards.js.map